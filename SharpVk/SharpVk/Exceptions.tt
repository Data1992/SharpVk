<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Net" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file=".\License.tt" #>
<#@ include file=".\Vk.ttinclude" #>
<#
	var parser = GetParser();
	var generator = new TypeGenerator();

	var types = generator.Generate(parser.Run());
#>using System;

namespace SharpVk
{
    /// <summary>
    /// The base type for exceptions thrown by the SharpVK library.
    /// </summary>
	public abstract class SharpVkException
		: Exception
	{
		/// <summary>
		/// Returns a value indicating whether the given Vulkan result code
		/// represents an error.
		/// </summary>
		public static bool IsError(Result resultCode)
		{
			return (int)resultCode < 0;
		}

		/// <summary>
		/// Creates and returns a new, specifically-typed exception that
		/// represents the given result code.
		/// </summary>
		public static SharpVkException Create(Result resultCode)
		{
			if(!IsError(resultCode))
			{
				return null;
			}

			switch(resultCode)
			{
<#
foreach(var exception in types.Exceptions)
{
#>				case <#=exception.Value#>:
					return new <#=exception.Name#>();
<#}#>			}

			return new UnknownSharpVkException(resultCode);
		}
		
		/// <summary>
		/// The Vulkan result code represented by this exception.
		/// </summary>
		public abstract Result ResultCode
		{
			get;
		}
	}
	
		
	/// <summary>
	/// An exception representing a result code not recognised by the SharpVk
	/// library.
	/// </summary>
	public class UnknownSharpVkException
		: SharpVkException
	{
		private Result resultCode;

		internal UnknownSharpVkException(Result resultCode)
		{
			this.resultCode = resultCode;
		}
		
		/// <summary>
		/// The Vulkan result code represented by this exception.
		/// </summary>
		public override Result ResultCode => this.resultCode;
	}

<#
foreach(var exception in types.Exceptions)
{
#>	/// <summary>
	/// -
	/// </summary>
	public class <#=exception.Name#>
		: SharpVkException
	{
		/// <summary>
		/// The Vulkan result code represented by this exception.
		/// </summary>
		public override Result ResultCode => <#=exception.Value#>;
	}
<#
#>
<#}#>
}