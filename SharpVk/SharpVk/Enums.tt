<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Net" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file=".\License.tt" #>
<#@ include file=".\Vk.ttinclude" #>
<#
	var parser = GetParser();
	var generator = new TypeGenerator();

	var types = generator.Generate(parser.Run());
#>
using System;

namespace SharpVk
{
<#
foreach(var enumeration in types.Enumerations)
{
	if(enumeration.IsFlags)
    {
#>
		[Flags]<#
    }
#>
		public enum <#=enumeration.Name#>
		{
<#
	bool first = true;

	foreach(var field in enumeration.Fields)
	{
		if(first)
        {
			first = false;
        }
		else
        {
#>
<#
        }
#>			<#=field.Name#> = <#=field.Value#>,<#
	}
#>
		}
<#
}
#>
}