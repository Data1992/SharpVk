<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Net" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file=".\License.tt" #>
<#@ include file=".\Vk.ttinclude" #>
<#
var parser = GetParser();
var generator = new TypeGenerator();

var types = generator.Generate(parser.Run());

var subGroups = types.Constants.Select(x => x.SubGroupName).Distinct();

#>
namespace SharpVk
{
<#
foreach(var subGroup in subGroups)
{
#>
    /// <summary>
    /// -
    /// </summary>
	public static class <#=subGroup ?? "Constants"#>
	{
<#
	foreach(var constant in types.Constants.Where(x => x.SubGroupName == subGroup))
	{
#>
	    /// <summary>
	    /// -
	    /// </summary>
		public const <#=GetTypeName(constant.Type)#> <#=constant.Name#> = <#=constant.Value#>;
<#
	}
#>
	}

<#
}
#>
}