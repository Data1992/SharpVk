<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Net" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file=".\License.tt" #>
<#@ include file=".\Vk.ttinclude" #>
using System;

namespace SharpVk
{
<#
	var structs = GetStructs();

	foreach(var structType in structs.Where(x => x.IsSimpleStruct))
	{
		string structName = structType.Name;
#>

	public struct <#=structName#>
	{
<#
		foreach(var member in structType.Members)
        {
			string memberTypeName = member.Type.Name;
			bool isFixedArray = false;
						
			if(member.Type.Category == Category.funcpointer)
            {
				memberTypeName = "IntPtr";
            }
			else if(member.Type.Category == Category.basetype)
            {
				memberTypeName = MapBaseTypeName(memberTypeName);
            }
			else if(memberTypeName == "char" && member.Size > 0)
			{
				memberTypeName = "string";
			}
			else if(member.Type.IsPrimitive && member.Size > 0)
			{
				isFixedArray = true;
			}
			else if(memberTypeName == "char" && member.PointerCount > 0)
			{
				memberTypeName = "string";
				member.PointerCount--;
			}
#>

		public <#=memberTypeName#> <#=member.Name#>;
<#
        }
#>
	}
<#
	}
#>
}