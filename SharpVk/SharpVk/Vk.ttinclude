<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ assembly name="$(SolutionDir)Lib\SharpVk.VkXml.dll" #>
<#@ import namespace="SharpVk.VkXml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Net" #>
<#@ import namespace="System.Xml.Linq" #>
<#+

Dictionary<string, string> baseTypes = new Dictionary<string, string>()
{
    {"Bool32", "bool"},
	{"DeviceSize", "ulong"},
	{"SampleMask", "uint"}
};

string[] extensionSuffixes = new[]{"KHR", "EXT"};

private static VkXmlCache xmlCache;
private static TypeDefCache typeCache;
 
XDocument GetVkXml()
{
	if(xmlCache == null)
	{
		xmlCache = new VkXmlCache(Path.Combine(Host.ResolvePath("."), "obj\\VkTemplates"));
    }

    return xmlCache.GetVkXml();
}

TypeDef GetTypeDef(string vkTypeName)
{
	if(xmlCache == null)
	{
		xmlCache = new VkXmlCache(Path.Combine(Host.ResolvePath("."), "obj\\VkTemplates"));
    }

	if(typeCache == null)
    {
		typeCache = new TypeDefCache(xmlCache);
    }

	var types = typeCache.GetAllTypes();

	if(!types.ContainsKey(vkTypeName))
    {
		throw new Exception(string.Format("Unrecognised VK Type {0}", vkTypeName));
    }

	return types[vkTypeName];
}

IEnumerable<TypeDef> GetStructs()
{	
	if(xmlCache == null)
	{
		xmlCache = new VkXmlCache(Path.Combine(Host.ResolvePath("."), "obj\\VkTemplates"));
    }

	if(typeCache == null)
    {
		typeCache = new TypeDefCache(xmlCache);
    }

	return typeCache.GetAllTypes().Select(x => x.Value).Where(x => x.Category == Category.@struct && !extensionSuffixes.Any(y => x.Name.EndsWith(y)));
}

IEnumerable<TypeDef> GetHandles()
{	
	if(xmlCache == null)
	{
		xmlCache = new VkXmlCache(Path.Combine(Host.ResolvePath("."), "obj\\VkTemplates"));
    }

	if(typeCache == null)
    {
		typeCache = new TypeDefCache(xmlCache);
    }

	return typeCache.GetAllTypes().Select(x => x.Value).Where(x => x.Category == Category.handle);
}

IEnumerable<TypeDef> GetUnions()
{
	if(xmlCache == null)
	{
		xmlCache = new VkXmlCache(Path.Combine(Host.ResolvePath("."), "obj\\VkTemplates"));
    }

	if(typeCache == null)
    {
		typeCache = new TypeDefCache(xmlCache);
    }

	return typeCache.GetAllTypes().Select(x => x.Value).Where(x => x.Category == Category.union);
}

IEnumerable<XElement> GetCommands()
{
	return GetVkXml().Element("registry").Element("commands").Elements("command").Where(x => !extensionSuffixes.Any(y => x.Element("proto").Value.EndsWith(y)));
}

string MapTypeName(string vkTypeName)
{
	return GetTypeDef(vkTypeName).Name;
}

string MapBaseTypeName(string baseTypeName)
{
	return baseTypes[baseTypeName];
}
#>