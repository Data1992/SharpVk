<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Net" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="..\License.tt" #>
<#@ include file="..\Vk.ttinclude" #>
using System;
using System.Runtime.InteropServices;

namespace SharpVk.Interop
{
	public static unsafe class Commands
	{
		public const string VulkanDll = "vulkan-1.dll";

<#
var parser = GetParser();
var generator = new TypeGenerator();

var types = generator.Generate(parser.Run());

foreach(var command in types.Commands)
{
#>
		[DllImport(VulkanDll, CallingConvention = CallingConvention.Winapi)]
		public static extern <#=command.ReturnTypeName#> <#=command.Name#>(<#

		bool isFirst = true;

		foreach(var parameter in command.Parameters)
        {
			if(isFirst)
            {
				isFirst = false;
            }
			else
            {
				#>, <#
            }
			
			#><#=parameter.TypeName#> <#=parameter.Name#><#
        }
#>);

<#
}
#>
	}
}